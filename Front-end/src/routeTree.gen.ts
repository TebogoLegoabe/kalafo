/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as DashboardProfileRouteImport } from './routes/dashboard/profile'
import { Route as DashboardHistoryRouteImport } from './routes/dashboard/history'
import { Route as DashboardHealthDataRouteImport } from './routes/dashboard/health-data'
import { Route as DashboardAppointmentsRouteImport } from './routes/dashboard/appointments'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthForgotRouteImport } from './routes/auth/forgot'
import { Route as DashboardDoctorRouteRouteImport } from './routes/dashboard/doctor/route'
import { Route as DashboardAdminRouteRouteImport } from './routes/dashboard/admin/route'
import { Route as DashboardDoctorIndexRouteImport } from './routes/dashboard/doctor/index'
import { Route as DashboardAdminIndexRouteImport } from './routes/dashboard/admin/index'
import { Route as DashboardDoctorScheduleRouteImport } from './routes/dashboard/doctor/schedule'
import { Route as DashboardDoctorRecordsRouteImport } from './routes/dashboard/doctor/records'
import { Route as DashboardDoctorPatientsRouteImport } from './routes/dashboard/doctor/patients'
import { Route as DashboardDoctorConsultationsRouteImport } from './routes/dashboard/doctor/consultations'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardProfileRoute = DashboardProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardHistoryRoute = DashboardHistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardHealthDataRoute = DashboardHealthDataRouteImport.update({
  id: '/health-data',
  path: '/health-data',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAppointmentsRoute = DashboardAppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotRoute = AuthForgotRouteImport.update({
  id: '/forgot',
  path: '/forgot',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardDoctorRouteRoute = DashboardDoctorRouteRouteImport.update({
  id: '/doctor',
  path: '/doctor',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAdminRouteRoute = DashboardAdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardDoctorIndexRoute = DashboardDoctorIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardDoctorRouteRoute,
} as any)
const DashboardAdminIndexRoute = DashboardAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAdminRouteRoute,
} as any)
const DashboardDoctorScheduleRoute = DashboardDoctorScheduleRouteImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => DashboardDoctorRouteRoute,
} as any)
const DashboardDoctorRecordsRoute = DashboardDoctorRecordsRouteImport.update({
  id: '/records',
  path: '/records',
  getParentRoute: () => DashboardDoctorRouteRoute,
} as any)
const DashboardDoctorPatientsRoute = DashboardDoctorPatientsRouteImport.update({
  id: '/patients',
  path: '/patients',
  getParentRoute: () => DashboardDoctorRouteRoute,
} as any)
const DashboardDoctorConsultationsRoute =
  DashboardDoctorConsultationsRouteImport.update({
    id: '/consultations',
    path: '/consultations',
    getParentRoute: () => DashboardDoctorRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/admin': typeof DashboardAdminRouteRouteWithChildren
  '/dashboard/doctor': typeof DashboardDoctorRouteRouteWithChildren
  '/auth/forgot': typeof AuthForgotRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/appointments': typeof DashboardAppointmentsRoute
  '/dashboard/health-data': typeof DashboardHealthDataRoute
  '/dashboard/history': typeof DashboardHistoryRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/auth/': typeof AuthIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/doctor/consultations': typeof DashboardDoctorConsultationsRoute
  '/dashboard/doctor/patients': typeof DashboardDoctorPatientsRoute
  '/dashboard/doctor/records': typeof DashboardDoctorRecordsRoute
  '/dashboard/doctor/schedule': typeof DashboardDoctorScheduleRoute
  '/dashboard/admin/': typeof DashboardAdminIndexRoute
  '/dashboard/doctor/': typeof DashboardDoctorIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/forgot': typeof AuthForgotRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/appointments': typeof DashboardAppointmentsRoute
  '/dashboard/health-data': typeof DashboardHealthDataRoute
  '/dashboard/history': typeof DashboardHistoryRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/auth': typeof AuthIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/doctor/consultations': typeof DashboardDoctorConsultationsRoute
  '/dashboard/doctor/patients': typeof DashboardDoctorPatientsRoute
  '/dashboard/doctor/records': typeof DashboardDoctorRecordsRoute
  '/dashboard/doctor/schedule': typeof DashboardDoctorScheduleRoute
  '/dashboard/admin': typeof DashboardAdminIndexRoute
  '/dashboard/doctor': typeof DashboardDoctorIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/admin': typeof DashboardAdminRouteRouteWithChildren
  '/dashboard/doctor': typeof DashboardDoctorRouteRouteWithChildren
  '/auth/forgot': typeof AuthForgotRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/appointments': typeof DashboardAppointmentsRoute
  '/dashboard/health-data': typeof DashboardHealthDataRoute
  '/dashboard/history': typeof DashboardHistoryRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/auth/': typeof AuthIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/doctor/consultations': typeof DashboardDoctorConsultationsRoute
  '/dashboard/doctor/patients': typeof DashboardDoctorPatientsRoute
  '/dashboard/doctor/records': typeof DashboardDoctorRecordsRoute
  '/dashboard/doctor/schedule': typeof DashboardDoctorScheduleRoute
  '/dashboard/admin/': typeof DashboardAdminIndexRoute
  '/dashboard/doctor/': typeof DashboardDoctorIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/dashboard'
    | '/dashboard/admin'
    | '/dashboard/doctor'
    | '/auth/forgot'
    | '/auth/register'
    | '/dashboard/appointments'
    | '/dashboard/health-data'
    | '/dashboard/history'
    | '/dashboard/profile'
    | '/auth/'
    | '/dashboard/'
    | '/dashboard/doctor/consultations'
    | '/dashboard/doctor/patients'
    | '/dashboard/doctor/records'
    | '/dashboard/doctor/schedule'
    | '/dashboard/admin/'
    | '/dashboard/doctor/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/forgot'
    | '/auth/register'
    | '/dashboard/appointments'
    | '/dashboard/health-data'
    | '/dashboard/history'
    | '/dashboard/profile'
    | '/auth'
    | '/dashboard'
    | '/dashboard/doctor/consultations'
    | '/dashboard/doctor/patients'
    | '/dashboard/doctor/records'
    | '/dashboard/doctor/schedule'
    | '/dashboard/admin'
    | '/dashboard/doctor'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/dashboard'
    | '/dashboard/admin'
    | '/dashboard/doctor'
    | '/auth/forgot'
    | '/auth/register'
    | '/dashboard/appointments'
    | '/dashboard/health-data'
    | '/dashboard/history'
    | '/dashboard/profile'
    | '/auth/'
    | '/dashboard/'
    | '/dashboard/doctor/consultations'
    | '/dashboard/doctor/patients'
    | '/dashboard/doctor/records'
    | '/dashboard/doctor/schedule'
    | '/dashboard/admin/'
    | '/dashboard/doctor/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/history': {
      id: '/dashboard/history'
      path: '/history'
      fullPath: '/dashboard/history'
      preLoaderRoute: typeof DashboardHistoryRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/health-data': {
      id: '/dashboard/health-data'
      path: '/health-data'
      fullPath: '/dashboard/health-data'
      preLoaderRoute: typeof DashboardHealthDataRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/appointments': {
      id: '/dashboard/appointments'
      path: '/appointments'
      fullPath: '/dashboard/appointments'
      preLoaderRoute: typeof DashboardAppointmentsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/forgot': {
      id: '/auth/forgot'
      path: '/forgot'
      fullPath: '/auth/forgot'
      preLoaderRoute: typeof AuthForgotRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/dashboard/doctor': {
      id: '/dashboard/doctor'
      path: '/doctor'
      fullPath: '/dashboard/doctor'
      preLoaderRoute: typeof DashboardDoctorRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/doctor/': {
      id: '/dashboard/doctor/'
      path: '/'
      fullPath: '/dashboard/doctor/'
      preLoaderRoute: typeof DashboardDoctorIndexRouteImport
      parentRoute: typeof DashboardDoctorRouteRoute
    }
    '/dashboard/admin/': {
      id: '/dashboard/admin/'
      path: '/'
      fullPath: '/dashboard/admin/'
      preLoaderRoute: typeof DashboardAdminIndexRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/doctor/schedule': {
      id: '/dashboard/doctor/schedule'
      path: '/schedule'
      fullPath: '/dashboard/doctor/schedule'
      preLoaderRoute: typeof DashboardDoctorScheduleRouteImport
      parentRoute: typeof DashboardDoctorRouteRoute
    }
    '/dashboard/doctor/records': {
      id: '/dashboard/doctor/records'
      path: '/records'
      fullPath: '/dashboard/doctor/records'
      preLoaderRoute: typeof DashboardDoctorRecordsRouteImport
      parentRoute: typeof DashboardDoctorRouteRoute
    }
    '/dashboard/doctor/patients': {
      id: '/dashboard/doctor/patients'
      path: '/patients'
      fullPath: '/dashboard/doctor/patients'
      preLoaderRoute: typeof DashboardDoctorPatientsRouteImport
      parentRoute: typeof DashboardDoctorRouteRoute
    }
    '/dashboard/doctor/consultations': {
      id: '/dashboard/doctor/consultations'
      path: '/consultations'
      fullPath: '/dashboard/doctor/consultations'
      preLoaderRoute: typeof DashboardDoctorConsultationsRouteImport
      parentRoute: typeof DashboardDoctorRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthForgotRoute: typeof AuthForgotRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotRoute: AuthForgotRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardAdminRouteRouteChildren {
  DashboardAdminIndexRoute: typeof DashboardAdminIndexRoute
}

const DashboardAdminRouteRouteChildren: DashboardAdminRouteRouteChildren = {
  DashboardAdminIndexRoute: DashboardAdminIndexRoute,
}

const DashboardAdminRouteRouteWithChildren =
  DashboardAdminRouteRoute._addFileChildren(DashboardAdminRouteRouteChildren)

interface DashboardDoctorRouteRouteChildren {
  DashboardDoctorConsultationsRoute: typeof DashboardDoctorConsultationsRoute
  DashboardDoctorPatientsRoute: typeof DashboardDoctorPatientsRoute
  DashboardDoctorRecordsRoute: typeof DashboardDoctorRecordsRoute
  DashboardDoctorScheduleRoute: typeof DashboardDoctorScheduleRoute
  DashboardDoctorIndexRoute: typeof DashboardDoctorIndexRoute
}

const DashboardDoctorRouteRouteChildren: DashboardDoctorRouteRouteChildren = {
  DashboardDoctorConsultationsRoute: DashboardDoctorConsultationsRoute,
  DashboardDoctorPatientsRoute: DashboardDoctorPatientsRoute,
  DashboardDoctorRecordsRoute: DashboardDoctorRecordsRoute,
  DashboardDoctorScheduleRoute: DashboardDoctorScheduleRoute,
  DashboardDoctorIndexRoute: DashboardDoctorIndexRoute,
}

const DashboardDoctorRouteRouteWithChildren =
  DashboardDoctorRouteRoute._addFileChildren(DashboardDoctorRouteRouteChildren)

interface DashboardRouteRouteChildren {
  DashboardAdminRouteRoute: typeof DashboardAdminRouteRouteWithChildren
  DashboardDoctorRouteRoute: typeof DashboardDoctorRouteRouteWithChildren
  DashboardAppointmentsRoute: typeof DashboardAppointmentsRoute
  DashboardHealthDataRoute: typeof DashboardHealthDataRoute
  DashboardHistoryRoute: typeof DashboardHistoryRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardAdminRouteRoute: DashboardAdminRouteRouteWithChildren,
  DashboardDoctorRouteRoute: DashboardDoctorRouteRouteWithChildren,
  DashboardAppointmentsRoute: DashboardAppointmentsRoute,
  DashboardHealthDataRoute: DashboardHealthDataRoute,
  DashboardHistoryRoute: DashboardHistoryRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
